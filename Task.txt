
Proyecto 1: Explorando los Fundamentos del Desarrollo Web en Entornos de Cliente

Fundamentación teórica

En el mundo actual, el desarrollo web en entornos de cliente es esencial para la creación de aplicaciones web modernas y dinámicas. Este proyecto de investigación tiene como objetivo explorar los conceptos clave que subyacen en este campo, desde los modelos de programación hasta las herramientas de programación utilizadas en la actualidad.
Objetivos del Proyecto

    Investigar y comprender los diferentes modelos de programación en entornos cliente/servidor y su aplicación en el desarrollo web.

    Analizar los mecanismos utilizados para ejecutar código en un navegador web y su relevancia en el desarrollo web moderno.

    Evaluar las capacidades y limitaciones de la ejecución en el navegador, así como la compatibilidad con diferentes navegadores web.

    Comparar las características de los lenguajes de script con la programación tradicional, destacando sus ventajas y desventajas.

    Explorar las tecnologías y lenguajes asociados al desarrollo web en entornos de cliente y su papel en la creación de aplicaciones web.

    Estudiar cómo se integra el código con las etiquetas HTML y su influencia en la experiencia del usuario.

    Investigar y utilizar diversas herramientas de programación que facilitan el desarrollo web en entornos de cliente.

Descripción del Proyecto

Parte 1 - Modelos de Programación en Entornos Cliente/Servidor:

    Investigación de los modelos cliente/servidor más comunes.
    Identificación de ejemplos de aplicaciones que utilizan cada modelo.

Parte 2 - Mecanismos de Ejecución de Código en un Navegador Web. Capacidades y Limitaciones de Ejecución. Compatibilidad con Navegadores Web:

    Estudio de cómo se ejecuta el código JavaScript en un navegador.
    Evaluación de las diferencias de compatibilidad entre navegadores.
    Resolución de problemas de compatibilidad en una aplicación web.

Parte 3 - Lenguajes de Programación en Entorno Cliente.

    Investigación de lenguajes como JavaScript, TypeScript, y otros.
    Comparación de sus características y aplicaciones.

Parte 4 - Características de los Lenguajes de Script. Ventajas y Desventajas:

    Análisis de las ventajas y desventajas de la programación en lenguajes de script sobre la programación tradicional.

Parte 5 - Tecnologías y Lenguajes Asociados. Integración del Código con las Etiquetas HTML:

    Exploración de tecnologías como CSS y HTML5.
    Creación de una pequeña aplicación web integrando código JavaScript de diferentes maneras.

Parte 6 - Herramientas de Programación:

    Uso de herramientas como Visual Studio Code, Chrome DevTools, etc.

Formato y entrega

Cada fase de investigación se plasmará en un documento y culminará en una presentación que resuma los hallazgos y las conclusiones. La entrega se realizará mediante la tarea habilitada en Moodle Centros llamada Proyecto 1 siguiendo la siguiente pauta:
Documento resultado de la investigación.

    Se valorará positivamente que sea realizado en markdown y publicado en el github del alumno/-a.
    Extensión máxima 10 páginas (sin incluir portada, índice y bibliografía).

Presentación

    Se valorará positivamente que sea realizado en markdown y publicado en el github del alumno/-a.
    Extensión máxima 2 slides por apartado (sin incluir portada, índice y bibliografía).

¿Cómo hago la entrega?

    En el caso de que el alumno/-a opte por la entrega en formato markdown, se deberá entregar un fichero de texto con los enlaces al repositorio. El archivo de texto se debe nombrar, "Px_ApellidosNombre_DWEC" (donde x es el número del proyecto).

    En caso contrario se entregará un archivo .zip que debe contener un archivo en formato PDF por cada una de las dos partes de la actividad (documento y presentación). El archivo de texto se debe nombrar, "Px_ApellidosNombre_DWEC" (donde x es el número del proyecto).

Algunas aclaraciones:

    Las respuestas sin justificación, que sean una copia de una fuente de información y/o que no contengan las referencias utilizadas, no recibirán puntuación. (véase la nota sobre propiedad intelectual al final del documento)
    Las referencias contenidas en el apartado "bibliografía" solo se valorarán en el caso de que hayan sido utilizadas en la redacción del documento.

Evaluación del proyecto

Mediante este proyecto se evalúan los siguientes criterios de evaluación:
1a) Se han caracterizado y diferenciado los modelos de ejecución de código en el servidor y en el cliente Web.
Descriptores 	Bien 	Regular 	Insuficiente
Caracterización y diferenciación de modelos de ejecución de código (5pt) 	Proporciona una descripción detallada de los modelos de ejecución y destaca sus diferencias clave (5pt) 	Ofrece una descripción adecuada de los modelos, pero puede mejorar la claridad o exhaustividad (2,5pt) 	La descripción de los modelos es insuficiente o confusa (0pt)
Ejemplos concretos y relevantes para ilustrar los modelos de ejecución (4pt) 	Proporciona ejemplos pertinentes y relevantes para ilustrar los modelos de ejecución, y están bien integrados en la explicación (4pt) 	Los ejemplos son adecuados, pero podrían ser más relevantes o estar mejor relacionados con los modelos (2pt) 	Los ejemplos son inadecuados o están ausentes (0pt)
Referencias relevantes a fuentes académicas o profesionales para respaldar la caracterización (1pt) 	Incluye múltiples referencias apropiadas y las cita correctamente (1pt) 	Incluye referencias, pero la calidad o cantidad podría mejorarse (0,5pt) 	Carece de referencias o las referencias son inadecuadas o incorrectas (0pt)
1b) Se han identificado las capacidades y mecanismos de ejecución de código de los navegadores Web.
Descriptores 	Bien 	Regular 	Insuficiente
Identificación de las capacidades y mecanismos de ejecución de código en los navegadores Web (3pt) 	Proporciona una descripción exhaustiva y precisa de las capacidades y mecanismos (3pt) 	Ofrece una descripción adecuada, pero puede haber omisiones o imprecisiones menores (1,5pt) 	La descripción es insuficiente o inexacta en varios aspectos (0pt)
Relevancia de las capacidades y mecanismos en el contexto del desarrollo web moderno (3pt) 	Explica la relevancia de las capacidades y mecanismos en el contexto del desarrollo web moderno, demostrando una comprensión clara de la importancia de estas capacidades y mecanismos (3pt) 	Comprende la relevancia, pero podría profundizar en su explicación (1,5pt) 	No demuestra una comprensión adecuada de la relevancia (0pt)
Ejemplos utilizados para ilustrar las capacidades y mecanismos identificados (3pt) 	Utiliza ejemplos concretos y relevantes para ilustrar las capacidades y mecanismos identificados, son pertinentes y están bien integrados en la explicación (3pt) 	Los ejemplos son adecuados, pero podrían ser más relevantes o estar mejor relacionados con los temas (1,5pt) 	Los ejemplos son inadecuados o están ausentes (0pt)
Referencias relevantes a fuentes académicas o profesionales para respaldar la caracterización (1pt) 	Incluye múltiples referencias apropiadas y las cita correctamente (1pt) 	Incluye referencias, pero la calidad o cantidad podría mejorarse (0,5pt) 	Carece de referencias o las referencias son inadecuadas o incorrectas (0pt)
1c) Se han identificado y caracterizado los principales lenguajes relacionados con la programación de clientes Web.
Descriptores 	Bien 	Regular 	Insuficiente
Identificación de lenguajes relacionados con la programación de clientes Web (3pt) 	Proporciona una lista exhaustiva y precisa de los lenguajes clave (3pt) 	Ofrece una lista adecuada, pero puede haber omisiones o imprecisiones menores (1,5pt) 	La lista es insuficiente o inexacta en varios aspectos (0pt)
Explicación de las aplicaciones y características distintivas de cada lenguaje identificado (3pt) 	Explica correctamente aplicaciones y características distintivas de cada lenguaje identificado (3pt) 	Comprende las aplicaciones, pero podría profundizar en su explicación (1,5pt) 	No demuestra una comprensión adecuada de las aplicaciones y características (0pt)
Ejemplos utilizados para ilustrar los lenguajes de programación identificados (3pt) 	Los ejemplos son pertinentes y están bien integrados en la explicación (3pt) 	Los ejemplos son adecuados, pero podrían ser más relevantes o estar mejor relacionados con los lenguajes (1,5pt) 	Los ejemplos son inadecuados o están ausentes (0pt)
Referencias relevantes a fuentes académicas o profesionales para respaldar la caracterización (1pt) 	Incluye múltiples referencias apropiadas y las cita correctamente (1pt) 	Incluye referencias, pero la calidad o cantidad podría mejorarse (0,5pt) 	Carece de referencias o las referencias son inadecuadas o incorrectas (0pt)
1d) Se han reconocido las particularidades de la programación de guiones y sus ventajas y desventajas sobre la programación tradicional.
Descriptores 	Bien 	Regular 	Insuficiente
Particularidades de la programación de guiones y sus ventajas y desventajas sobre la programación tradicional (3pt) 	Reconoce de manera clara y completa las particularidades de la programación de guiones y sus ventajas y desventajas sobre la programación tradicional. Proporciona una descripción exhaustiva y precisa de las particularidades, ventajas y desventajas (3pt) 	Ofrece una descripción adecuada, pero puede haber omisiones o imprecisiones menores (1,5pt) 	La descripción es insuficiente o inexacta en varios aspectos (0pt)
Aplicabilidad de la programación de guiones en situaciones específicas y sus beneficios (3pt) 	Explica claramente la aplicabilidad de la programación de guiones en situaciones específicas y sus beneficios (3pt) 	Comprende la aplicabilidad, pero podría profundizar en su explicación (1,5pt) 	No demuestra una comprensión adecuada de la aplicabilidad y beneficios (0pt)
Ejemplos utilizados para ilustrar ventajas y desventajas (3pt) 	Los ejemplos son pertinentes y están bien integrados en la explicación (3pt) 	Los ejemplos son adecuados, pero podrían ser más relevantes (1,5pt) 	Los ejemplos son inadecuados o están ausentes (0pt)
Referencias relevantes a fuentes académicas o profesionales para respaldar la caracterización (1pt) 	Incluye múltiples referencias apropiadas y las cita correctamente (1pt) 	Incluye referencias, pero la calidad o cantidad podría mejorarse (0,5pt) 	Carece de referencias o las referencias son inadecuadas o incorrectas (0pt)
1e) Se han verificado los mecanismos de integración de los lenguajes de marcas con los lenguajes de programación de clientes Web.
Descriptores 	Bien 	Regular 	Insuficiente
Mecanismos de integración de los lenguajes de marcas con los lenguajes de programación de clientes Web (3pt) 	Proporciona una descripción exhaustiva y precisa de los diferentes mecanismos de integración (3pt) 	Ofrece una descripción adecuada, pero puede haber omisiones o imprecisiones menores (1,5pt) 	La descripción es insuficiente o inexacta en varios aspectos (0pt)
Importancia de los mecanismos de integración en la creación de aplicaciones web efectivas (3pt) 	Explica en profundidad la importancia de la importancia de estos mecanismos, demuestrando una comprensión clara (3pt) 	Comprende la relevancia, pero podría profundizar en su explicación (1,5pt) 	No demuestra una comprensión adecuada de la relevancia (0pt)
Ejemplos utilizados para ilustrar los mecanismos de integración identificados (3pt) 	Los ejemplos son pertinentes y están bien integrados en la explicación (3pt) 	Los ejemplos son adecuados, pero podrían ser más relevantes (1,5pt) 	Los ejemplos son inadecuados o están ausentes (0pt)
Referencias relevantes a fuentes académicas o profesionales para respaldar la caracterización (1pt) 	Incluye múltiples referencias apropiadas y las cita correctamente (1pt) 	Incluye referencias, pero la calidad o cantidad podría mejorarse (0,5pt) 	Carece de referencias o las referencias son inadecuadas o incorrectas (0pt)
1f) Se han reconocido y evaluado las herramientas de programación sobre clientes Web.
Descriptores 	Bien 	Regular 	Insuficiente
Herramientas de programación utilizadas en el desarrollo de clientes Web (3pt) 	Proporciona una lista exhaustiva y precisa de las herramientas clave (3pt) 	Ofrece una lista adecuada, pero puede haber omisiones o imprecisiones menores (1,5pt) 	La lista es insuficiente o inexacta en varios aspectos (0pt)
Explica las funciones y ventajas distintivas de cada herramienta identificada (3pt) 	Demuestra un conocimiento claro de las funciones y ventajas de las herramientas (3pt) 	Comprende las funciones, pero podría profundizar en su explicación (1,5pt) 	No demuestra una comprensión adecuada de las funciones y ventajas (0pt)
EEjemplos utilizados para ilustrar las herramientas de programación identificadas (3pt) 	Los ejemplos son pertinentes y están bien integrados en la explicación (3pt) 	Los ejemplos son adecuados, pero podrían ser más relevantes (1,5pt) 	Los ejemplos son inadecuados o están ausentes (0pt)
Referencias relevantes a fuentes académicas o profesionales para respaldar la caracterización (1pt) 	Incluye múltiples referencias apropiadas y las cita correctamente (1pt) 	Incluye referencias, pero la calidad o cantidad podría mejorarse (0,5pt) 	Carece de referencias o las referencias son inadecuadas o incorrectas (0pt)
Nota: Propiedad intelectual

        A menudo es inevitable, al escribir un documento, hacer uso de recursos creados por terceras personas. Es por tanto comprensible hacerlo en el marco de una práctica de nuestros estudios, siempre que esto se documente claramente y no suponga plagio en la práctica. Por lo tanto, al presentar una práctica que haga uso de recursos ajenos, se deberá referenciar claramente estos recursos, especificando el nombre de cada recurso, su autor, el lugar donde se obtuvo y el su estatus legal: si la obra está protegida por copyright o se acoge a alguna otra licencia de uso (Creative Commons, licencia GNU, GPL ...). El estudiante deberá asegurarse de que la licencia que sea no impide específicamente su uso en el marco de la práctica. En caso de no encontrar la información correspondiente deberá asumir que la obra está protegida por copyright.
